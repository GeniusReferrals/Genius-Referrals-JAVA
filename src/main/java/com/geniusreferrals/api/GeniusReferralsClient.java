/*
 * GeniusReferralsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.geniusreferrals.api;

import com.geniusreferrals.api.controllers.*;
import com.geniusreferrals.api.http.client.HttpClient;

public class GeniusReferralsClient {
    /**
     * Singleton access to Roots controller
     * @return	Returns the RootsController instance 
     */
    public RootsController getRoots() {
        return RootsController.getInstance();
    }

    /**
     * Singleton access to Authentications controller
     * @return	Returns the AuthenticationsController instance 
     */
    public AuthenticationsController getAuthentications() {
        return AuthenticationsController.getInstance();
    }

    /**
     * Singleton access to Advocates controller
     * @return	Returns the AdvocatesController instance 
     */
    public AdvocatesController getAdvocates() {
        return AdvocatesController.getInstance();
    }

    /**
     * Singleton access to Accounts controller
     * @return	Returns the AccountsController instance 
     */
    public AccountsController getAccounts() {
        return AccountsController.getInstance();
    }

    /**
     * Singleton access to Reports controller
     * @return	Returns the ReportsController instance 
     */
    public ReportsController getReports() {
        return ReportsController.getInstance();
    }

    /**
     * Singleton access to Referrals controller
     * @return	Returns the ReferralsController instance 
     */
    public ReferralsController getReferrals() {
        return ReferralsController.getInstance();
    }

    /**
     * Singleton access to RedemptionRequests controller
     * @return	Returns the RedemptionRequestsController instance 
     */
    public RedemptionRequestsController getRedemptionRequests() {
        return RedemptionRequestsController.getInstance();
    }

    /**
     * Singleton access to Bonuses controller
     * @return	Returns the BonusesController instance 
     */
    public BonusesController getBonuses() {
        return BonusesController.getInstance();
    }

    /**
     * Singleton access to Campaigns controller
     * @return	Returns the CampaignsController instance 
     */
    public CampaignsController getCampaigns() {
        return CampaignsController.getInstance();
    }

    /**
     * Get the shared http client currently being used for API calls
     * @return The http client instance currently being used
     */
    public HttpClient getSharedHttpClient() {
        return BaseController.getClientInstance();
    }
    
    /**
     * Set a shared http client to be used for API calls
     * @param httpClient The http client to use
     */
    public void setSharedHttpClient(HttpClient httpClient) {
        BaseController.setClientInstance(httpClient);
    }

    /**
     * Default constructor 
     */     
    public GeniusReferralsClient() {	
        Configuration.contentType = "application/json";
        Configuration.xAuthToken = "3b9d11374b602fb47b987dff90f1c5940a1f377f";
	}

    /**
     * Client initialization constructor 
     */     
    public GeniusReferralsClient(String contentType, String xAuthToken) {
        this();
        if(contentType != null) Configuration.contentType = contentType;
        if(xAuthToken != null) Configuration.xAuthToken = xAuthToken;
    }
}